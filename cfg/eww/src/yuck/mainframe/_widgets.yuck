(defwidget mainframe_profile[]
  (box :orientation 'v' :space-evenly false
  (box :orientation 'h' :class 'mainframe_profile' :space-evenly false
      (box :class "mainframe_profile_picture" )
      (box :hexpand true :halign 'start' :class " white mainframe_profile_name" "namish@artx" )
      (box :class "mainframe_profile_time" :orientation 'h' :space-evenly false
          (box :class 'mainframe_profile_time_text white' "${thourtime}")
        )
    )
  (mainframe_sep)
  )
)

(defwidget mainframe_button[func label altfunc icon activevar]
  (box :orientation 'v' :class 'white mainframe_button_whole' :space-evenly false :spacing 8
    (box :orientation 'h' :hexpand true :class 'mainframe_button ${activevar == "active" ? "active" : ""}' :space-evenly false :width 137 :height 90 
      (button :onclick func  :hexpand true :class 'mainframe_button_icon_box'
          (label :class 'mainframe_button_icon' :halign 'start' :text icon)
        )
      (button :onclick altfunc :halign 'end' :class 'mainframe_button_alt' "󰅂")
    )
    (label :class 'mainframe_button_label' :text label)
  )
)

(defwidget mainframe_settings[]
  (box :orientation 'v' :class 'mainframe_settings' :space-evenly false :spacing 20
      (box :orientation 'h' :halign 'center' :class 'mainframe_settings_row' :space-evenly false :spacing 20
          (mainframe_button :label 'Wifi' :func "~/.config/eww/scripts/wifi --toggle" :altfunc "~/.local/bin/rofiscripts/wifimenu &" :icon '󰤨' :activevar wifiactive)
          (mainframe_button :label 'Bluetooth' :func "~/.config/eww/scripts/bluetooth --toggle" :altfunc "~/.local/bin/rofiscripts/bluetoothmenu" :icon '󰂯' :activevar btactive)
          (mainframe_button :label 'Do Not Disturb' :func "~/.config/eww/scripts/donotdisturb --toggle" :altfunc "st -e nvim ~/.config/dunst/dunstrc &" :icon '󰍶' :activevar dndactive)
        )
      (box :orientation 'h' :halign 'center' :class 'mainframe_settings_row' :space-evenly false :spacing 15
          (mainframe_button :label 'Airplane Mode' :func "~/.config/eww/scripts/airplanemode --toggle" :altfunc "dunstify 'Toggle Airplane Mode'" :icon '󰀝' :activevar apactive)
          (mainframe_button :label 'Compositer' :func "~/.config/eww/scripts/picom --toggle" :altfunc "st -e nvim ~/.config/picom/picom.conf &" :icon '󱂬' :activevar picomactive)
          (mainframe_button :label 'Mic' :func "pamixer --source 56 -t" :altfunc "pavucontrol &" :icon '󰍬' :activevar "${micmute == 'true'? 'active' : ''}")
        )
  )
)

(defwidget mainframe_scale[label value func scalelabel]
   (box
    :orientation "h"
    :space-evenly "false" :spacing 16 :class "mainframe_scale_box"
      (box :orientation "h" :valign "center" :class "mainframe_scale_label " label)
      (scale :class "mainframe_scale white ${scalelabel}"
              :min 0
              :hexpand true
              :max 100
              :orientation "h"
              :value value
              :onchange func
              :valign 'center')
    )
)

(defwidget mainframe_scales[]
  (box :orientation 'v' :class 'mainframe_scales' :space-evenly false :spacing 15
      (mainframe_scale :func "pamixer --set-volume $(printf %d {})" :scalelabel "mainframe_scale_volume" :value volume :label "󰕾")
      (mainframe_scale :func "brightnessctl s {}%" :scalelabel "mainframe_scale_brightness" :value brightness :label "󰃞")
    )
)

(defwidget mainframe_focus[]
  (box :orientation 'h':class 'mainframe_focus' :space-evenly false :spacing 10
        (box :class 'white mainframe_focus_text' 'Chill')
        (box :valign 'center' :class 'mainframe_focus_toggle' :height 20 :width 70 :space-evenly false
            (button :valign 'center' :onclick '~/.local/bin/hostsafe toggle' :class 'mainframe_focus_box' :height 24 :valign 'center' :hexpand true :halign '${focusmode == "true" ? "end" : "start"}' :width 30)
          )
        (box :class 'white mainframe_focus_text' 'Focus')
    )
)

(defwidget mainframe_song[]
  (box :orientation 'h' :class 'mainframe_song_cont' :space-evenly false :spacing 6
  (box :orientation 'h' :hexpand true :class 'mainframe_song_box' :space-evenly false
    (box :orientation 'v' :class 'mainframe_song' :space-evenly false :hexpand true :halign 'start'
      (box :halign 'start' :class 'mainframe_song_name white' songname)
      (box :halign 'start' :class 'mainframe_song_artist white' artist)
      (box :class 'mainframe_song_controls' :orientation 'h' :spacing 10 :space-evenly false
            (button :class "mainframe_song_btn white prev" :onclick "playerctl --player=spotify previous"  "󰙣")
            (button :class "mainframe_song_btn accent play" :onclick "playerctl --player=spotify play-pause" "${icon}" )
            (button :class "mainframe_song_btn white symsongbtn next" :onclick "playerctl --player=spotify next" "󰙡")
      )
    )
    (box :class "mainframe_song_icon accent" "󰎆")
  )
  )
)

(defwidget mainframe_statprog[label value icon]
  (box :class 'mainframe_statprog' :orientation 'v' :space-evenly false
      (label :class 'mainframe_statprog_uplab white' :halign 'start' :text label)
       (circular-progress :class "accent mainframe_statprog_bar"
                   :value value
                   :thickness 7
                   :clockwise true
                   :start-at 30
         (label :class 'accent mainframe_statprog_label' :text icon))
    )
)

(defwidget mainframe_stats[]
  (box :orientation 'h' :class 'mainframe_stats' :spacing 20
      (mainframe_statprog :label 'RAM' :value {EWW_RAM.used_mem_perc} :icon '󰘚' )
      (mainframe_statprog :label 'CPU' :value {round(EWW_CPU.avg, 0)} :icon '󰍛' )
      (mainframe_statprog :label 'DISK' :value {EWW_DISK["/"].used_perc} :icon '󰋊' )
    )
)


(defwidget mainframe_footer[]
  (box :orientation 'h' :class 'mainframe_footer' :space-evenly false
      (box :class 'mainframe_battery' :hexpand true  :halign 'start' '${battery_icon} ${battery_perc}%')
      (mainframe_focus)
    )
)

(defwidget mainframe_sep[]
  (box :orientation 'h' :class 'mainframe_sep_box'
      (box :class 'mainframe_sep')
    )
)

(defwidget mainframe[]
  (box :orientation 'v' :hexpand true :space-evenly false :class 'mainframe'
    (mainframe_profile)
    (mainframe_settings)
    (mainframe_scales)
    (mainframe_song)
    (mainframe_stats)
    (mainframe_footer)
  )
)
